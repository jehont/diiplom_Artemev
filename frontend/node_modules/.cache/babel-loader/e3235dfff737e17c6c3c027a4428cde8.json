{"ast":null,"code":"import axios from \"axios\";\nimport { mapState, mapMutations } from \"vuex\";\nexport default {\n  name: 'Dashboard',\n\n  data() {\n    return {\n      avaiableStatus: [\"cancel\", \"confirmed\", \"preparing\", \"checking\", \"delivering\", \"delivered\", \"completed\"],\n      allBills: [],\n      showOrderDetails: false,\n      sendId: undefined,\n      interval: \"\"\n    };\n  },\n\n  created() {\n    this.getAllBills();\n\n    if (!this.admin) {\n      this.$router.push(\"/\");\n    }\n  },\n\n  mounted: function () {\n    this.autoUpdate();\n  },\n\n  beforeUnmount() {\n    clearInterval(this.interval);\n  },\n\n  computed: { ...mapState([\"allFoods\", \"admin\"]),\n    filterBills: function () {\n      return this.allBills.filter(b => b.bill_status < 6 && b.bill_status > 0);\n    }\n  },\n  methods: { ...mapMutations([\"setAdmin\"]),\n\n    async getAllBills() {\n      this.allBills = (await axios.get('/billstatus')).data;\n    },\n\n    sendBillId: function (id) {\n      this.sendId = id;\n      this.showOrderDetails = !this.showOrderDetails;\n    },\n    closeView: function () {\n      this.showOrderDetails = !this.showOrderDetails;\n    },\n    handleLogout: function () {\n      this.setAdmin(\"\");\n    },\n\n    async nextStatusBtn(id) {\n      await axios.put('/billstatus/' + id);\n      this.getAllBills();\n    },\n\n    async paidBtn(id) {\n      await axios.put('/billstatus/paid/' + id);\n      this.getAllBills();\n    },\n\n    async cancelBtn(id) {\n      await axios.put('/billstatus/cancel/' + id);\n      this.getAllBills();\n    },\n\n    autoUpdate: function () {\n      this.interval = setInterval(function () {\n        this.getAllBills();\n      }.bind(this), 1000);\n    }\n  }\n};","map":{"version":3,"mappings":"AA6DA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,MAAvC;AACA,eAAe;EACXC,IAAI,EAAE,WADK;;EAGXC,IAAI,GAAG;IACH,OAAO;MACHC,cAAc,EAAE,CAAC,QAAD,EAAW,WAAX,EAAwB,WAAxB,EAAqC,UAArC,EAAiD,YAAjD,EAA+D,WAA/D,EAA4E,WAA5E,CADb;MAEHC,QAAQ,EAAE,EAFP;MAGHC,gBAAgB,EAAE,KAHf;MAIHC,MAAM,EAAEC,SAJL;MAKHC,QAAQ,EAAE;IALP,CAAP;EAOH,CAXU;;EAaXC,OAAO,GAAG;IACN,KAAKC,WAAL;;IACA,IAAI,CAAC,KAAKC,KAAV,EAAiB;MACb,KAAKC,OAAL,CAAaC,IAAb,CAAkB,GAAlB;IACJ;EACH,CAlBU;;EAoBXC,OAAO,EAAE,YAAY;IACjB,KAAKC,UAAL;EACH,CAtBU;;EAwBXC,aAAa,GAAG;IACZC,aAAa,CAAC,KAAKT,QAAN,CAAb;EACH,CA1BU;;EA4BXU,QAAQ,EAAE,EACN,GAAGnB,QAAQ,CAAC,CAAC,UAAD,EAAa,OAAb,CAAD,CADL;IAGNoB,WAAW,EAAE,YAAY;MACrB,OAAO,KAAKf,QAAL,CAAcgB,MAAd,CAAsBC,CAAD,IAAOA,CAAC,CAACC,WAAF,GAAgB,CAAhB,IAAqBD,CAAC,CAACC,WAAF,GAAgB,CAAjE,CAAP;IACH;EALK,CA5BC;EAoCXC,OAAO,EAAE,EACL,GAAGvB,YAAY,CAAC,CAAC,UAAD,CAAD,CADV;;IAGL,MAAMU,WAAN,GAAoB;MAChB,KAAKN,QAAL,GAAgB,CAAC,MAAMN,KAAK,CAAC0B,GAAN,CAAU,aAAV,CAAP,EAAiCtB,IAAjD;IACH,CALI;;IAOLuB,UAAU,EAAE,UAAUC,EAAV,EAAc;MACtB,KAAKpB,MAAL,GAAcoB,EAAd;MACA,KAAKrB,gBAAL,GAAwB,CAAC,KAAKA,gBAA9B;IACH,CAVI;IAYLsB,SAAS,EAAE,YAAY;MACnB,KAAKtB,gBAAL,GAAwB,CAAC,KAAKA,gBAA9B;IACH,CAdI;IAgBLuB,YAAY,EAAE,YAAY;MACtB,KAAKC,QAAL,CAAc,EAAd;IACH,CAlBI;;IAoBL,MAAMC,aAAN,CAAoBJ,EAApB,EAAwB;MACpB,MAAM5B,KAAK,CAACiC,GAAN,CAAU,iBAAiBL,EAA3B,CAAN;MACA,KAAKhB,WAAL;IACH,CAvBI;;IAyBL,MAAMsB,OAAN,CAAcN,EAAd,EAAkB;MACd,MAAM5B,KAAK,CAACiC,GAAN,CAAU,sBAAsBL,EAAhC,CAAN;MACA,KAAKhB,WAAL;IACH,CA5BI;;IA8BL,MAAMuB,SAAN,CAAgBP,EAAhB,EAAoB;MAChB,MAAM5B,KAAK,CAACiC,GAAN,CAAU,wBAAwBL,EAAlC,CAAN;MACA,KAAKhB,WAAL;IACH,CAjCI;;IAmCLK,UAAU,EAAE,YAAY;MACpB,KAAKP,QAAL,GAAgB0B,WAAW,CAAC,YAAY;QACpC,KAAKxB,WAAL;MACH,CAF2B,CAE1ByB,IAF0B,CAErB,IAFqB,CAAD,EAEb,IAFa,CAA3B;IAGJ;EAvCK;AApCE,CAAf","names":["axios","mapState","mapMutations","name","data","avaiableStatus","allBills","showOrderDetails","sendId","undefined","interval","created","getAllBills","admin","$router","push","mounted","autoUpdate","beforeUnmount","clearInterval","computed","filterBills","filter","b","bill_status","methods","get","sendBillId","id","closeView","handleLogout","setAdmin","nextStatusBtn","put","paidBtn","cancelBtn","setInterval","bind"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\restaurant-ordering-system-master\\frontend\\src\\admin\\Dashboard.vue"],"sourcesContent":["<template>\n    <div class=\"admin-container\">\n        <div class=\"d-flex justify-content-between\">\n            <h1>Hello Admin!</h1>\n            <button class=\"btn\" @click=\"handleLogout()\">Logout</button>\n        </div>\n\n        <div class=\"table-responsive\">\n            <!-- PROJECT TABLE -->\n            <table class=\"table colored-header datatable project-list\">\n                <thead>\n                    <tr>\n                        <th>Bill Id</th>\n                        <th>User Id</th>\n                        <th>Phone</th>\n                        <th>Address</th>\n                        <th>When</th>\n                        <th>Paid</th>\n                        <th>Total</th>\n                        <th>Status</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr v-for=\"(b) in filterBills.slice().reverse()\" :key=\"b.bill_id\">\n                        <td>{{ b.bill_id }}</td>\n                        <td>{{ b.user_id }}</td>\n                        <td>{{ b.bill_phone }}</td>\n                        <td>{{ b.bill_address }}</td>\n                        <td>{{ b.bill_when }}</td>\n                        <td>{{ b.bill_paid }}</td>\n                        <td>${{ b.bill_total }}</td>\n                        <td>{{ avaiableStatus[b.bill_status] }}</td>\n                        <td>\n                            <button v-if=\"b.bill_status < 5\" class=\"action-btn\" @click=\"nextStatusBtn(b.bill_id)\">\n                                {{ avaiableStatus[b.bill_status + 1] }}\n                            </button>\n\n                            <button v-if=\"b.bill_status == 1\" class=\"cancel-btn\" @click=\"cancelBtn(b.bill_id)\">\n                                Cancel\n                            </button>\n\n                            <button v-else-if=\"b.bill_status == 5 && b.bill_paid == 'false'\" class=\"paid-btn\"\n                                @click=\"paidBtn(b.bill_id)\">\n                                Paid\n                            </button>\n\n                            <button v-else-if=\"b.bill_status == 5 && b.bill_paid == 'true'\" class=\"action-btn\"\n                                @click=\"nextStatusBtn(b.bill_id)\">\n                                {{ avaiableStatus[b.bill_status + 1] }}\n                            </button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</template>\n\n\n<script>\nimport axios from \"axios\";\nimport { mapState, mapMutations } from \"vuex\";\nexport default {\n    name: 'Dashboard',\n\n    data() {\n        return {\n            avaiableStatus: [\"cancel\", \"confirmed\", \"preparing\", \"checking\", \"delivering\", \"delivered\", \"completed\"],\n            allBills: [],\n            showOrderDetails: false,\n            sendId: undefined,\n            interval: \"\",\n        }\n    },\n\n    created() {\n        this.getAllBills();\n        if (!this.admin) {\n            this.$router.push(\"/\");\n        }\n    },\n\n    mounted: function () {\n        this.autoUpdate();\n    },\n\n    beforeUnmount() {\n        clearInterval(this.interval)\n    },\n\n    computed: {\n        ...mapState([\"allFoods\", \"admin\"]),\n\n        filterBills: function () {\n            return this.allBills.filter((b) => b.bill_status < 6 && b.bill_status > 0);\n        },\n    },\n\n    methods: {\n        ...mapMutations([\"setAdmin\"]),\n\n        async getAllBills() {\n            this.allBills = (await axios.get('/billstatus')).data;\n        },\n\n        sendBillId: function (id) {\n            this.sendId = id\n            this.showOrderDetails = !this.showOrderDetails;\n        },\n\n        closeView: function () {\n            this.showOrderDetails = !this.showOrderDetails;\n        },\n\n        handleLogout: function () {\n            this.setAdmin(\"\");\n        },\n\n        async nextStatusBtn(id) {\n            await axios.put('/billstatus/' + id);\n            this.getAllBills();\n        },\n\n        async paidBtn(id) {\n            await axios.put('/billstatus/paid/' + id);\n            this.getAllBills();\n        },\n\n        async cancelBtn(id) {\n            await axios.put('/billstatus/cancel/' + id);\n            this.getAllBills();\n        },\n\n        autoUpdate: function () {\n            this.interval = setInterval(function () {\n                this.getAllBills();\n            }.bind(this), 1000);\n        }\n\n    },\n}\n</script>\n\n<style scoped>\n.admin-container {\n    background-color: #fff;\n    height: 100vh;\n    padding: 2rem 9%;\n    font-size: 16px;\n}\n\n.project-list>tbody>tr>td {\n    padding: 12px 8px;\n}\n\n.project-list>tbody>tr>td .avatar {\n    width: 22px;\n    border: 1px solid #CCC;\n}\n\n.table-responsive {\n    margin-top: 8vh;\n}\n\n.action-btn,\n.cancel-btn,\n.paid-btn {\n    width: 100px;\n    height: 25px;\n    color: white;\n    text-transform: capitalize;\n}\n\n.action-btn {\n    background-color: #0da9ef;\n    margin-right: 10px;\n}\n\n.cancel-btn,\n.paid-btn {\n    background-color: red;\n}\n\n.action-btn:hover {\n    background-color: #27ae60;\n}\n</style>"]},"metadata":{},"sourceType":"module"}