{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: \"Register\",\n\n  data() {\n    return {\n      registerObj: {\n        name: \"\",\n        email: \"\",\n        pass: \"\",\n        confirm: \"\",\n        phone: \"\",\n        birth: \"\",\n        gender: \"\"\n      },\n      errorObj: {\n        nameErr: [],\n        emailErr: [],\n        passErr: [],\n        confirmErr: [],\n        phoneErr: [],\n        birthErr: [],\n        genderErr: []\n      },\n      matchUser: undefined\n    };\n  },\n\n  methods: {\n    async getMatchUser(email) {\n      let data = await axios.get('/users/' + email);\n      this.matchUser = data.data;\n    },\n\n    scrollToTop() {\n      window.scrollTo(0, 0);\n    },\n\n    availableTime: function () {\n      var now = new Date();\n      var day = (\"0\" + now.getDate()).slice(-2);\n      var currentMonth = (\"0\" + (now.getMonth() + 1)).slice(-2);\n      var minRange = now.getFullYear() - 150 + \"-\" + currentMonth + \"-\" + day;\n      var maxRange = now.getFullYear() + \"-\" + currentMonth + \"-\" + day;\n      document.getElementById(\"uBirth\").setAttribute(\"min\", minRange);\n      document.getElementById(\"uBirth\").setAttribute(\"max\", maxRange);\n    },\n    resetCheckErr: function () {\n      this.errorObj.nameErr = [];\n      this.errorObj.emailErr = [];\n      this.errorObj.passErr = [];\n      this.errorObj.confirmErr = [];\n      this.errorObj.phoneErr = [];\n      this.errorObj.birthErr = [];\n      this.errorObj.genderErr = [];\n    },\n    checkEmptyErr: function () {\n      for (var typeErr in this.errorObj) {\n        if (this.errorObj[typeErr].length != 0) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n    checkForm: function () {\n      this.resetCheckErr(); // Name validate\n\n      if (!this.registerObj.name) {\n        this.errorObj.nameErr.push(\"Entering a name is required\");\n      } else {\n        if (!/^[A-Za-z]+$/.test(this.registerObj.name.replace(/\\s/g, \"\"))) {\n          this.errorObj.nameErr.push('A name can only contain letters');\n        }\n      } // Email validate\n\n\n      if (!this.registerObj.email) {\n        this.errorObj.emailErr.push(\"Entering a email is required\");\n      } else {\n        if (!/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/.test(this.registerObj.email)) {\n          this.errorObj.emailErr.push('Email must be valid');\n        }\n      } // Pass validate\n\n\n      if (!this.registerObj.pass) {\n        this.errorObj.passErr.push('Password is required');\n      } else {\n        if (!/[!@#$%^&*]/.test(this.registerObj.pass)) {\n          this.errorObj.passErr.push('Password must contain at least 1 special character');\n        }\n\n        if (this.registerObj.pass.length < 8) {\n          this.errorObj.passErr.push('Password must be more than or equal 8 characters');\n        }\n      } // Confirm Pass validate\n\n\n      if (!this.registerObj.confirm) {\n        this.errorObj.confirmErr.push('Confirm password is required');\n      } else {\n        if (this.registerObj.pass !== this.registerObj.confirm) {\n          this.errorObj.confirmErr.push('Confirm password must be match with password');\n        }\n      } // Phone validate\n\n\n      if (!this.registerObj.phone) {\n        this.errorObj.phoneErr.push('Entering phone number is required');\n      } else {\n        if (!this.registerObj.phone.startsWith('84')) {\n          this.errorObj.phoneErr.push('Phone numbers must start with 84');\n        }\n\n        if (this.registerObj.phone.length != 11) {\n          this.errorObj.phoneErr.push('Phone numbers must have exactly 11 digits');\n        }\n\n        if (!/[0-9]{11}/.test(this.registerObj.phone)) {\n          this.errorObj.phoneErr.push('Phone numbers can only contain numbers');\n        }\n      } // Birth validate\n\n\n      if (!this.registerObj.birth) {\n        this.errorObj.birthErr.push(\"Entering birthday is required\");\n      } else {\n        let minRange = document.getElementById(\"uBirth\").getAttribute(\"min\");\n        let maxRange = document.getElementById(\"uBirth\").getAttribute(\"max\");\n        let dateMin = new Date(minRange);\n        let dateMax = new Date(maxRange);\n        let dateInput = new Date(this.registerObj.birth);\n\n        if (dateInput === \"Invalid Date\") {\n          this.errorObj.birthErr.push(\"Invalid date input\");\n        }\n\n        if (dateInput.getTime() < dateMin.getTime() || dateInput.getTime() > dateMax.getTime()) {\n          this.errorObj.birthErr.push(\"Available birthday range is from pass 150 years to now\");\n        }\n      } // Gender validate\n\n\n      if (!this.registerObj.gender) {\n        this.errorObj.genderErr.push(\"Please select a gender\");\n      }\n    },\n\n    async handleSubmit(e) {\n      this.checkForm();\n\n      if (!this.checkEmptyErr()) {\n        e.preventDefault();\n      } else {\n        e.preventDefault();\n        await this.getMatchUser(this.registerObj.email);\n\n        if (this.matchUser) {\n          this.errorObj.emailErr.push(\"Account already exist\");\n        } else {\n          let data = {\n            user_name: this.registerObj.name,\n            user_email: this.registerObj.email,\n            user_phone: this.registerObj.phone,\n            user_password: this.registerObj.pass,\n            user_birth: this.registerObj.birth,\n            user_gender: this.registerObj.gender\n          };\n          await axios.post(\"/users/\", data);\n          this.$router.push(\"/login\");\n        }\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","name","data","registerObj","email","pass","confirm","phone","birth","gender","errorObj","nameErr","emailErr","passErr","confirmErr","phoneErr","birthErr","genderErr","matchUser","undefined","methods","getMatchUser","get","scrollToTop","window","scrollTo","availableTime","now","Date","day","getDate","slice","currentMonth","getMonth","minRange","getFullYear","maxRange","document","getElementById","setAttribute","resetCheckErr","checkEmptyErr","typeErr","length","checkForm","push","test","replace","startsWith","getAttribute","dateMin","dateMax","dateInput","getTime","handleSubmit","e","preventDefault","user_name","user_email","user_phone","user_password","user_birth","user_gender","post","$router"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\restaurant-ordering-system-master\\frontend\\src\\pages\\Register.vue"],"sourcesContent":["<template>\n    <div class=\"register-container\">\n        <div class=\"register-form-container\">\n            <form id=\"registerForm\" @submit=\"handleSubmit\" novalidate autocomplete=\"off\">\n                <h3>Create your account</h3>\n                <div class=\"form-group\">\n                    <label for=\"uName\">Enter your name:\n                    </label>\n                    <input type=\"text\" name=\"uName\" placeholder=\"your full name\" id=\"uName\" class=\"form-control\"\n                        v-model=\"registerObj.name\" />\n                    <p class=\"error-mess\" v-if=\"errorObj.nameErr.length > 0\">{{ errorObj.nameErr[0] }}</p>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"uEmail\">Enter your email:\n                    </label>\n                    <input type=\"email\" name=\"uEmail\" placeholder=\"example@gmail.com\" id=\"uEmail\" class=\"form-control\"\n                        v-model=\"registerObj.email\" />\n                    <p class=\"error-mess\" v-if=\"errorObj.emailErr.length > 0\">{{ errorObj.emailErr[0] }}</p>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"uPass\">Enter your password:\n                    </label>\n                    <input type=\"password\" name=\"uPass\" placeholder=\"enter your password\" id=\"uPass\"\n                        class=\"form-control\" v-model=\"registerObj.pass\" />\n                    <p class=\"error-mess\" v-if=\"errorObj.passErr.length > 0\">{{ errorObj.passErr[0] }}</p>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"uPassConfirm\">Check your password again:\n                    </label>\n                    <input type=\"password\" name=\"uPassConfirm\" placeholder=\"enter your password again\" id=\"uPassConfirm\"\n                        class=\"form-control\" v-model=\"registerObj.confirm\" />\n                    <p class=\"error-mess\" v-if=\"errorObj.confirmErr.length > 0\">{{ errorObj.confirmErr[0] }}</p>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"uPhone\">Enter your phone number:\n                    </label>\n                    <input type=\"tel\" name=\"uPhone\" placeholder=\"enter your phone number\" id=\"uPhone\"\n                        class=\"form-control\" v-model=\"registerObj.phone\" />\n                    <p class=\"error-mess\" v-if=\"errorObj.phoneErr.length > 0\">{{ errorObj.phoneErr[0] }}</p>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"uBirth\">Enter your birthday:\n                    </label>\n                    <input type=\"date\" name=\"uBirth\" id=\"uBirth\" class=\"form-control\" @click=\"availableTime()\"\n                        v-model=\"registerObj.birth\" />\n                    <p class=\"error-mess\" v-if=\"errorObj.birthErr.length > 0\">{{ errorObj.birthErr[0] }}</p>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"\">Select your gender:\n                    </label>\n                    <div class=\"form-group\">\n                        <input type=\"radio\" name=\"gender\" value=\"male\" id=\"genderMale\"\n                            v-model=\"registerObj.gender\" /><span>Male</span>\n                        <input type=\"radio\" name=\"gender\" value=\"female\" id=\"genderFemale\"\n                            v-model=\"registerObj.gender\" /><span>Female</span>\n                    </div>\n                    <p class=\"error-mess\" v-if=\"errorObj.genderErr.length > 0\">{{ errorObj.genderErr[0] }}</p>\n                </div>\n\n                <div class=\"form-group\">\n                    <input type=\"submit\" value=\"join us\" class=\"btn\" />\n                    <p>have an account? <router-link @click=\"scrollToTop()\" to=\"/login\">login</router-link>\n                    </p>\n                </div>\n            </form>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nexport default {\n    name: \"Register\",\n\n    data() {\n        return {\n            registerObj: { name: \"\", email: \"\", pass: \"\", confirm: \"\", phone: \"\", birth: \"\", gender: \"\" },\n            errorObj: { nameErr: [], emailErr: [], passErr: [], confirmErr: [], phoneErr: [], birthErr: [], genderErr: [] },\n            matchUser: undefined,\n\n        }\n    },\n\n    methods: {\n        async getMatchUser(email) {\n            let data = await axios.get('/users/' + email);\n            this.matchUser = data.data;\n        },\n\n        scrollToTop() {\n            window.scrollTo(0, 0);\n        },\n\n        availableTime: function () {\n            var now = new Date();\n            var day = (\"0\" + now.getDate()).slice(-2);\n            var currentMonth = (\"0\" + (now.getMonth() + 1)).slice(-2);\n            var minRange = (now.getFullYear() - 150) + \"-\" + currentMonth + \"-\" + day;\n            var maxRange = now.getFullYear() + \"-\" + currentMonth + \"-\" + day;\n\n            document.getElementById(\"uBirth\").setAttribute(\"min\", minRange);\n            document.getElementById(\"uBirth\").setAttribute(\"max\", maxRange);\n        },\n\n        resetCheckErr: function () {\n            this.errorObj.nameErr = [];\n            this.errorObj.emailErr = [];\n            this.errorObj.passErr = [];\n            this.errorObj.confirmErr = [];\n            this.errorObj.phoneErr = [];\n            this.errorObj.birthErr = [];\n            this.errorObj.genderErr = [];\n        },\n\n        checkEmptyErr: function () {\n            for (var typeErr in this.errorObj) {\n                if (this.errorObj[typeErr].length != 0) {\n                    return false;\n                }\n            }\n            return true;\n        },\n\n        checkForm: function () {\n            this.resetCheckErr();\n\n            // Name validate\n            if (!this.registerObj.name) {\n                this.errorObj.nameErr.push(\"Entering a name is required\");\n            }\n            else {\n                if (!/^[A-Za-z]+$/.test(this.registerObj.name.replace(/\\s/g, \"\"))) {\n                    this.errorObj.nameErr.push('A name can only contain letters');\n                }\n            }\n\n            // Email validate\n            if (!this.registerObj.email) {\n                this.errorObj.emailErr.push(\"Entering a email is required\");\n            }\n            else {\n                if (!/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/.test(this.registerObj.email)) {\n                    this.errorObj.emailErr.push('Email must be valid');\n                }\n            }\n\n            // Pass validate\n            if (!this.registerObj.pass) {\n                this.errorObj.passErr.push('Password is required');\n            }\n            else {\n                if (!/[!@#$%^&*]/.test(this.registerObj.pass)) {\n                    this.errorObj.passErr.push('Password must contain at least 1 special character');\n                }\n\n                if (this.registerObj.pass.length < 8) {\n                    this.errorObj.passErr.push('Password must be more than or equal 8 characters');\n                }\n            }\n\n            // Confirm Pass validate\n            if (!this.registerObj.confirm) {\n                this.errorObj.confirmErr.push('Confirm password is required');\n            }\n            else {\n                if (this.registerObj.pass !== this.registerObj.confirm) {\n                    this.errorObj.confirmErr.push('Confirm password must be match with password');\n                }\n            }\n\n\n            // Phone validate\n            if (!this.registerObj.phone) {\n                this.errorObj.phoneErr.push('Entering phone number is required');\n            }\n            else {\n                if (!this.registerObj.phone.startsWith('84')) {\n                    this.errorObj.phoneErr.push('Phone numbers must start with 84');\n                }\n\n                if (this.registerObj.phone.length != 11) {\n                    this.errorObj.phoneErr.push('Phone numbers must have exactly 11 digits');\n                }\n\n                if (!/[0-9]{11}/.test(this.registerObj.phone)) {\n                    this.errorObj.phoneErr.push('Phone numbers can only contain numbers');\n                }\n            }\n\n            // Birth validate\n            if (!this.registerObj.birth) {\n                this.errorObj.birthErr.push(\"Entering birthday is required\");\n            }\n            else {\n                let minRange = document.getElementById(\"uBirth\").getAttribute(\"min\");\n                let maxRange = document.getElementById(\"uBirth\").getAttribute(\"max\");\n                let dateMin = new Date(minRange);\n                let dateMax = new Date(maxRange);\n                let dateInput = new Date(this.registerObj.birth);\n\n                if (dateInput === \"Invalid Date\") {\n                    this.errorObj.birthErr.push(\"Invalid date input\");\n                }\n\n                if (dateInput.getTime() < dateMin.getTime() || dateInput.getTime() > dateMax.getTime()) {\n                    this.errorObj.birthErr.push(\"Available birthday range is from pass 150 years to now\");\n                }\n            }\n\n            // Gender validate\n            if (!this.registerObj.gender) {\n                this.errorObj.genderErr.push(\"Please select a gender\");\n            }\n        },\n\n        async handleSubmit(e) {\n            this.checkForm();\n\n            if (!this.checkEmptyErr()) {\n                e.preventDefault();\n            } else {\n                e.preventDefault();\n                await this.getMatchUser(this.registerObj.email);\n                if (this.matchUser) {\n                    this.errorObj.emailErr.push(\"Account already exist\")\n                }\n                else {\n                    let data = {\n                        user_name: this.registerObj.name,\n                        user_email: this.registerObj.email,\n                        user_phone: this.registerObj.phone,\n                        user_password: this.registerObj.pass,\n                        user_birth: this.registerObj.birth,\n                        user_gender: this.registerObj.gender\n                    }\n                    await axios.post(\"/users/\", data);\n                    this.$router.push(\"/login\");\n                }\n            }\n        }\n    },\n\n};\n</script>\n\n\n<style scoped>\n.register-container {\n    padding: 2rem 9%;\n}\n\n.register-container .register-form-container {\n    background: #fff;\n\n}\n\n.register-container .register-form-container form {\n    position: relative;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    max-width: 70rem;\n    width: 100%;\n    box-shadow: 0 1rem 1rem rgba(0, 0, 0, 0.05);\n    border: 0.1rem solid rgba(0, 0, 0, 0.2);\n    padding: 2rem;\n    border-radius: 0.5rem;\n    animation: fadeUp 0.4s linear;\n}\n\n.register-container .register-form-container form h3 {\n    padding-bottom: 1rem;\n    font-size: 2rem;\n    text-transform: uppercase;\n    color: #130f40;\n    margin: 0;\n}\n\n.register-container .register-form-container form .form-control {\n    margin: 0.7rem 0;\n    border-radius: 0.5rem;\n    background: #f7f7f7;\n    padding: 2rem 1.2rem;\n    font-size: 1.6rem;\n    color: #130f40;\n    text-transform: none;\n    width: 100%;\n    border: none;\n}\n\n.register-container .register-form-container form label {\n    font-size: 2rem;\n    margin: 0;\n    padding: 0;\n}\n\n.register-container .register-form-container form span {\n    font-size: 18px;\n    padding-left: 5px;\n    padding-right: 40px;\n}\n\n.register-container .register-form-container form .btn {\n    margin: 1rem 0;\n    width: 100%;\n    text-align: center;\n}\n\n.register-container .register-form-container form p {\n    padding-top: 1rem;\n    font-size: 1.5rem;\n    color: #666;\n    margin: 0;\n}\n\n.register-container .register-form-container form p a {\n    color: #27ae60;\n}\n\n.register-container .register-form-container form p a:hover {\n    color: #130f40;\n    text-decoration: underline;\n}\n\n.register-container .register-form-container form .form-group {\n    margin: 0;\n}\n\n.register-container .register-form-container form .form-group .error-mess {\n    font-size: 1.5rem;\n    position: relative;\n    color: rgb(243, 47, 47);\n    margin: 0;\n    padding: 0;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}