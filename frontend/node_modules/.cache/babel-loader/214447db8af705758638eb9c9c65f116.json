{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"Register\",\n\n  data() {\n    return {\n      registerObj: {\n        name: \"\",\n        email: \"\",\n        pass: \"\",\n        confirm: \"\",\n        phone: \"\",\n        birth: \"\",\n        gender: \"\"\n      },\n      errorObj: {\n        nameErr: [],\n        emailErr: [],\n        passErr: [],\n        confirmErr: [],\n        phoneErr: [],\n        birthErr: [],\n        genderErr: []\n      },\n      matchUser: undefined\n    };\n  },\n\n  methods: {\n    async getMatchUser(email) {\n      let data = await axios.get(\"/users/\" + email);\n      this.matchUser = data.data;\n    },\n\n    scrollToTop() {\n      window.scrollTo(0, 0);\n    },\n\n    availableTime: function () {\n      var now = new Date();\n      var day = (\"0\" + now.getDate()).slice(-2);\n      var currentMonth = (\"0\" + (now.getMonth() + 1)).slice(-2);\n      var minRange = now.getFullYear() - 150 + \"-\" + currentMonth + \"-\" + day;\n      var maxRange = now.getFullYear() + \"-\" + currentMonth + \"-\" + day;\n      document.getElementById(\"uBirth\").setAttribute(\"min\", minRange);\n      document.getElementById(\"uBirth\").setAttribute(\"max\", maxRange);\n    },\n    resetCheckErr: function () {\n      this.errorObj.nameErr = [];\n      this.errorObj.emailErr = [];\n      this.errorObj.passErr = [];\n      this.errorObj.confirmErr = [];\n      this.errorObj.phoneErr = [];\n      this.errorObj.birthErr = [];\n      this.errorObj.genderErr = [];\n    },\n    checkEmptyErr: function () {\n      for (var typeErr in this.errorObj) {\n        if (this.errorObj[typeErr].length != 0) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n    checkForm: function () {\n      this.resetCheckErr(); // Name validate\n\n      if (!this.registerObj.name) {\n        this.errorObj.nameErr.push(\"Entering a name is required\");\n      } else {\n        if (!/^[A-Za-z]+$/.test(this.registerObj.name.replace(/\\s/g, \"\"))) {\n          this.errorObj.nameErr.push(\"A name can only contain letters\");\n        }\n      } // Email validate\n\n\n      if (!this.registerObj.email) {\n        this.errorObj.emailErr.push(\"Entering a email is required\");\n      } else {\n        if (!/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/.test(this.registerObj.email)) {\n          this.errorObj.emailErr.push(\"Email must be valid\");\n        }\n      } // Pass validate\n\n\n      if (!this.registerObj.pass) {\n        this.errorObj.passErr.push(\"Password is required\");\n      } else {\n        if (!/[!@#$%^&*]/.test(this.registerObj.pass)) {\n          this.errorObj.passErr.push(\"Password must contain at least 1 special character\");\n        }\n\n        if (this.registerObj.pass.length < 8) {\n          this.errorObj.passErr.push(\"Password must be more than or equal 8 characters\");\n        }\n      } // Confirm Pass validate\n\n\n      if (!this.registerObj.confirm) {\n        this.errorObj.confirmErr.push(\"Confirm password is required\");\n      } else {\n        if (this.registerObj.pass !== this.registerObj.confirm) {\n          this.errorObj.confirmErr.push(\"Confirm password must be match with password\");\n        }\n      } // Phone validate\n\n\n      if (!this.registerObj.phone) {\n        this.errorObj.phoneErr.push(\"Entering phone number is required\");\n      } else {\n        if (!this.registerObj.phone.startsWith(\"84\")) {\n          this.errorObj.phoneErr.push(\"Номер телефона должен начинаться с 7\");\n        }\n\n        if (this.registerObj.phone.length != 11) {\n          this.errorObj.phoneErr.push(\"Phone numbers must have exactly 11 digits\");\n        }\n\n        if (!/[0-9]{11}/.test(this.registerObj.phone)) {\n          this.errorObj.phoneErr.push(\"Phone numbers can only contain numbers\");\n        }\n      } // Birth validate\n\n\n      if (!this.registerObj.birth) {\n        this.errorObj.birthErr.push(\"Entering birthday is required\");\n      } else {\n        let minRange = document.getElementById(\"uBirth\").getAttribute(\"min\");\n        let maxRange = document.getElementById(\"uBirth\").getAttribute(\"max\");\n        let dateMin = new Date(minRange);\n        let dateMax = new Date(maxRange);\n        let dateInput = new Date(this.registerObj.birth);\n\n        if (dateInput === \"Invalid Date\") {\n          this.errorObj.birthErr.push(\"Invalid date input\");\n        }\n\n        if (dateInput.getTime() < dateMin.getTime() || dateInput.getTime() > dateMax.getTime()) {\n          this.errorObj.birthErr.push(\"Available birthday range is from pass 150 years to now\");\n        }\n      } // Gender validate\n\n\n      if (!this.registerObj.gender) {\n        this.errorObj.genderErr.push(\"Please select a gender\");\n      }\n    },\n\n    async handleSubmit(e) {\n      this.checkForm();\n\n      if (!this.checkEmptyErr()) {\n        e.preventDefault();\n      } else {\n        e.preventDefault();\n        await this.getMatchUser(this.registerObj.email);\n\n        if (this.matchUser) {\n          this.errorObj.emailErr.push(\"Account already exist\");\n        } else {\n          let data = {\n            user_name: this.registerObj.name,\n            user_email: this.registerObj.email,\n            user_phone: this.registerObj.phone,\n            user_password: this.registerObj.pass,\n            user_birth: this.registerObj.birth,\n            user_gender: this.registerObj.gender\n          };\n          await axios.post(\"/users/\", data);\n          this.$router.push(\"/login\");\n        }\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","name","data","registerObj","email","pass","confirm","phone","birth","gender","errorObj","nameErr","emailErr","passErr","confirmErr","phoneErr","birthErr","genderErr","matchUser","undefined","methods","getMatchUser","get","scrollToTop","window","scrollTo","availableTime","now","Date","day","getDate","slice","currentMonth","getMonth","minRange","getFullYear","maxRange","document","getElementById","setAttribute","resetCheckErr","checkEmptyErr","typeErr","length","checkForm","push","test","replace","startsWith","getAttribute","dateMin","dateMax","dateInput","getTime","handleSubmit","e","preventDefault","user_name","user_email","user_phone","user_password","user_birth","user_gender","post","$router"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\restaurant-ordering-system-master\\frontend\\src\\pages\\Register.vue"],"sourcesContent":["<template>\n  <div class=\"register-container\">\n    <div class=\"register-form-container\">\n      <form\n        id=\"registerForm\"\n        @submit=\"handleSubmit\"\n        novalidate\n        autocomplete=\"off\"\n      >\n        <h3>Create your account</h3>\n        <div class=\"form-group\">\n          <label for=\"uName\">Enter your name: </label>\n          <input\n            type=\"text\"\n            name=\"uName\"\n            placeholder=\"your full name\"\n            id=\"uName\"\n            class=\"form-control\"\n            v-model=\"registerObj.name\"\n          />\n          <p class=\"error-mess\" v-if=\"errorObj.nameErr.length > 0\">\n            {{ errorObj.nameErr[0] }}\n          </p>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"uEmail\">Enter your email: </label>\n          <input\n            type=\"email\"\n            name=\"uEmail\"\n            placeholder=\"example@gmail.com\"\n            id=\"uEmail\"\n            class=\"form-control\"\n            v-model=\"registerObj.email\"\n          />\n          <p class=\"error-mess\" v-if=\"errorObj.emailErr.length > 0\">\n            {{ errorObj.emailErr[0] }}\n          </p>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"uPass\">Enter your password: </label>\n          <input\n            type=\"password\"\n            name=\"uPass\"\n            placeholder=\"enter your password\"\n            id=\"uPass\"\n            class=\"form-control\"\n            v-model=\"registerObj.pass\"\n          />\n          <p class=\"error-mess\" v-if=\"errorObj.passErr.length > 0\">\n            {{ errorObj.passErr[0] }}\n          </p>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"uPassConfirm\">Check your password again: </label>\n          <input\n            type=\"password\"\n            name=\"uPassConfirm\"\n            placeholder=\"enter your password again\"\n            id=\"uPassConfirm\"\n            class=\"form-control\"\n            v-model=\"registerObj.confirm\"\n          />\n          <p class=\"error-mess\" v-if=\"errorObj.confirmErr.length > 0\">\n            {{ errorObj.confirmErr[0] }}\n          </p>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"uPhone\">Enter your phone number: </label>\n          <input\n            type=\"tel\"\n            name=\"uPhone\"\n            placeholder=\"enter your phone number\"\n            id=\"uPhone\"\n            class=\"form-control\"\n            v-model=\"registerObj.phone\"\n          />\n          <p class=\"error-mess\" v-if=\"errorObj.phoneErr.length > 0\">\n            {{ errorObj.phoneErr[0] }}\n          </p>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"uBirth\">Enter your birthday: </label>\n          <input\n            type=\"date\"\n            name=\"uBirth\"\n            id=\"uBirth\"\n            class=\"form-control\"\n            @click=\"availableTime()\"\n            v-model=\"registerObj.birth\"\n          />\n          <p class=\"error-mess\" v-if=\"errorObj.birthErr.length > 0\">\n            {{ errorObj.birthErr[0] }}\n          </p>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"\">Select your gender: </label>\n          <div class=\"form-group\">\n            <input\n              type=\"radio\"\n              name=\"gender\"\n              value=\"male\"\n              id=\"genderMale\"\n              v-model=\"registerObj.gender\"\n            /><span>Male</span>\n            <input\n              type=\"radio\"\n              name=\"gender\"\n              value=\"female\"\n              id=\"genderFemale\"\n              v-model=\"registerObj.gender\"\n            /><span>Female</span>\n          </div>\n          <p class=\"error-mess\" v-if=\"errorObj.genderErr.length > 0\">\n            {{ errorObj.genderErr[0] }}\n          </p>\n        </div>\n\n        <div class=\"form-group\">\n          <input type=\"submit\" value=\"join us\" class=\"btn\" />\n          <p>\n            have an account?\n            <router-link @click=\"scrollToTop()\" to=\"/login\">login</router-link>\n          </p>\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  name: \"Register\",\n\n  data() {\n    return {\n      registerObj: {\n        name: \"\",\n        email: \"\",\n        pass: \"\",\n        confirm: \"\",\n        phone: \"\",\n        birth: \"\",\n        gender: \"\",\n      },\n      errorObj: {\n        nameErr: [],\n        emailErr: [],\n        passErr: [],\n        confirmErr: [],\n        phoneErr: [],\n        birthErr: [],\n        genderErr: [],\n      },\n      matchUser: undefined,\n    };\n  },\n\n  methods: {\n    async getMatchUser(email) {\n      let data = await axios.get(\"/users/\" + email);\n      this.matchUser = data.data;\n    },\n\n    scrollToTop() {\n      window.scrollTo(0, 0);\n    },\n\n    availableTime: function () {\n      var now = new Date();\n      var day = (\"0\" + now.getDate()).slice(-2);\n      var currentMonth = (\"0\" + (now.getMonth() + 1)).slice(-2);\n      var minRange = now.getFullYear() - 150 + \"-\" + currentMonth + \"-\" + day;\n      var maxRange = now.getFullYear() + \"-\" + currentMonth + \"-\" + day;\n\n      document.getElementById(\"uBirth\").setAttribute(\"min\", minRange);\n      document.getElementById(\"uBirth\").setAttribute(\"max\", maxRange);\n    },\n\n    resetCheckErr: function () {\n      this.errorObj.nameErr = [];\n      this.errorObj.emailErr = [];\n      this.errorObj.passErr = [];\n      this.errorObj.confirmErr = [];\n      this.errorObj.phoneErr = [];\n      this.errorObj.birthErr = [];\n      this.errorObj.genderErr = [];\n    },\n\n    checkEmptyErr: function () {\n      for (var typeErr in this.errorObj) {\n        if (this.errorObj[typeErr].length != 0) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    checkForm: function () {\n      this.resetCheckErr();\n\n      // Name validate\n      if (!this.registerObj.name) {\n        this.errorObj.nameErr.push(\"Entering a name is required\");\n      } else {\n        if (!/^[A-Za-z]+$/.test(this.registerObj.name.replace(/\\s/g, \"\"))) {\n          this.errorObj.nameErr.push(\"A name can only contain letters\");\n        }\n      }\n\n      // Email validate\n      if (!this.registerObj.email) {\n        this.errorObj.emailErr.push(\"Entering a email is required\");\n      } else {\n        if (\n          !/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/.test(\n            this.registerObj.email\n          )\n        ) {\n          this.errorObj.emailErr.push(\"Email must be valid\");\n        }\n      }\n\n      // Pass validate\n      if (!this.registerObj.pass) {\n        this.errorObj.passErr.push(\"Password is required\");\n      } else {\n        if (!/[!@#$%^&*]/.test(this.registerObj.pass)) {\n          this.errorObj.passErr.push(\n            \"Password must contain at least 1 special character\"\n          );\n        }\n\n        if (this.registerObj.pass.length < 8) {\n          this.errorObj.passErr.push(\n            \"Password must be more than or equal 8 characters\"\n          );\n        }\n      }\n\n      // Confirm Pass validate\n      if (!this.registerObj.confirm) {\n        this.errorObj.confirmErr.push(\"Confirm password is required\");\n      } else {\n        if (this.registerObj.pass !== this.registerObj.confirm) {\n          this.errorObj.confirmErr.push(\n            \"Confirm password must be match with password\"\n          );\n        }\n      }\n\n      // Phone validate\n      if (!this.registerObj.phone) {\n        this.errorObj.phoneErr.push(\"Entering phone number is required\");\n      } else {\n        if (!this.registerObj.phone.startsWith(\"84\")) {\n          this.errorObj.phoneErr.push(\"Номер телефона должен начинаться с 7\");\n        }\n\n        if (this.registerObj.phone.length != 11) {\n          this.errorObj.phoneErr.push(\n            \"Phone numbers must have exactly 11 digits\"\n          );\n        }\n\n        if (!/[0-9]{11}/.test(this.registerObj.phone)) {\n          this.errorObj.phoneErr.push(\"Phone numbers can only contain numbers\");\n        }\n      }\n\n      // Birth validate\n      if (!this.registerObj.birth) {\n        this.errorObj.birthErr.push(\"Entering birthday is required\");\n      } else {\n        let minRange = document.getElementById(\"uBirth\").getAttribute(\"min\");\n        let maxRange = document.getElementById(\"uBirth\").getAttribute(\"max\");\n        let dateMin = new Date(minRange);\n        let dateMax = new Date(maxRange);\n        let dateInput = new Date(this.registerObj.birth);\n\n        if (dateInput === \"Invalid Date\") {\n          this.errorObj.birthErr.push(\"Invalid date input\");\n        }\n\n        if (\n          dateInput.getTime() < dateMin.getTime() ||\n          dateInput.getTime() > dateMax.getTime()\n        ) {\n          this.errorObj.birthErr.push(\n            \"Available birthday range is from pass 150 years to now\"\n          );\n        }\n      }\n\n      // Gender validate\n      if (!this.registerObj.gender) {\n        this.errorObj.genderErr.push(\"Please select a gender\");\n      }\n    },\n\n    async handleSubmit(e) {\n      this.checkForm();\n\n      if (!this.checkEmptyErr()) {\n        e.preventDefault();\n      } else {\n        e.preventDefault();\n        await this.getMatchUser(this.registerObj.email);\n        if (this.matchUser) {\n          this.errorObj.emailErr.push(\"Account already exist\");\n        } else {\n          let data = {\n            user_name: this.registerObj.name,\n            user_email: this.registerObj.email,\n            user_phone: this.registerObj.phone,\n            user_password: this.registerObj.pass,\n            user_birth: this.registerObj.birth,\n            user_gender: this.registerObj.gender,\n          };\n          await axios.post(\"/users/\", data);\n          this.$router.push(\"/login\");\n        }\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.register-container {\n  padding: 2rem 9%;\n}\n\n.register-container .register-form-container {\n  background: #fff;\n}\n\n.register-container .register-form-container form {\n  position: relative;\n  left: 50%;\n  transform: translate(-50%, 0%);\n  max-width: 70rem;\n  width: 100%;\n  box-shadow: 0 1rem 1rem rgba(0, 0, 0, 0.05);\n  border: 0.1rem solid rgba(0, 0, 0, 0.2);\n  padding: 2rem;\n  border-radius: 0.5rem;\n  animation: fadeUp 0.4s linear;\n}\n\n.register-container .register-form-container form h3 {\n  padding-bottom: 1rem;\n  font-size: 2rem;\n  text-transform: uppercase;\n  color: #130f40;\n  margin: 0;\n}\n\n.register-container .register-form-container form .form-control {\n  margin: 0.7rem 0;\n  border-radius: 0.5rem;\n  background: #f7f7f7;\n  padding: 2rem 1.2rem;\n  font-size: 1.6rem;\n  color: #130f40;\n  text-transform: none;\n  width: 100%;\n  border: none;\n}\n\n.register-container .register-form-container form label {\n  font-size: 2rem;\n  margin: 0;\n  padding: 0;\n}\n\n.register-container .register-form-container form span {\n  font-size: 18px;\n  padding-left: 5px;\n  padding-right: 40px;\n}\n\n.register-container .register-form-container form .btn {\n  margin: 1rem 0;\n  width: 100%;\n  text-align: center;\n}\n\n.register-container .register-form-container form p {\n  padding-top: 1rem;\n  font-size: 1.5rem;\n  color: #666;\n  margin: 0;\n}\n\n.register-container .register-form-container form p a {\n  color: #27ae60;\n}\n\n.register-container .register-form-container form p a:hover {\n  color: #130f40;\n  text-decoration: underline;\n}\n\n.register-container .register-form-container form .form-group {\n  margin: 0;\n}\n\n.register-container .register-form-container form .form-group .error-mess {\n  font-size: 1.5rem;\n  position: relative;\n  color: rgb(243, 47, 47);\n  margin: 0;\n  padding: 0;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}