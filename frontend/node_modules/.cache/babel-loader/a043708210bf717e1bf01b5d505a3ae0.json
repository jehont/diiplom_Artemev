{"ast":null,"code":"import axios from 'axios';\nimport VueBasicAlert from 'vue-basic-alert';\nexport default {\n  name: \"Table\",\n\n  data() {\n    return {\n      orderObj: {\n        name: \"\",\n        phone: \"\",\n        people: \"\",\n        tables: \"\",\n        card: \"\",\n        when: \"\",\n        note: \"\"\n      },\n      errorObj: {\n        nameErr: [],\n        phoneErr: [],\n        peopleErr: [],\n        tablesErr: [],\n        cardErr: [],\n        whenErr: []\n      }\n    };\n  },\n\n  methods: {\n    availableTime: function () {\n      var now = new Date();\n      var day = (\"0\" + now.getDate()).slice(-2);\n      var currentMonth = (\"0\" + (now.getMonth() + 1)).slice(-2);\n      var maxMonth = (\"0\" + (now.getMonth() + 3)).slice(-2);\n      var hour = (\"0\" + now.getHours()).slice(-2);\n      var min = (\"0\" + now.getMinutes()).slice(-2);\n      var minRange = now.getFullYear() + \"-\" + currentMonth + \"-\" + day + \"T\" + hour + \":\" + min;\n      var maxRange = now.getFullYear() + \"-\" + maxMonth + \"-\" + day + \"T\" + hour + \":\" + min;\n      document.getElementById(\"oWhen\").setAttribute(\"min\", minRange);\n      document.getElementById(\"oWhen\").setAttribute(\"max\", maxRange);\n    },\n    resetCheckErr: function () {\n      this.errorObj.nameErr = [];\n      this.errorObj.phoneErr = [];\n      this.errorObj.peopleErr = [];\n      this.errorObj.tablesErr = [];\n      this.errorObj.cardErr = [];\n      this.errorObj.whenErr = [];\n    },\n    checkEmptyErr: function () {\n      for (var typeErr in this.errorObj) {\n        if (this.errorObj[typeErr].length != 0) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n    checkForm: function () {\n      this.resetCheckErr(); // Name validate\n\n      if (!this.orderObj.name) {\n        this.errorObj.nameErr.push(\"Entering a name is required\");\n      } else {\n        if (!/^[A-Za-z]+$/.test(this.orderObj.name.replace(/\\s/g, \"\"))) {\n          this.errorObj.nameErr.push('A name can only contain letters');\n        }\n      } // Phone validate\n\n\n      if (!this.orderObj.phone) {\n        this.errorObj.phoneErr.push('Entering phone number is required');\n      } else {\n        if (!this.orderObj.phone.startsWith('84')) {\n          this.errorObj.phoneErr.push('Phone numbers must start with 84');\n        }\n\n        if (!/[0-9]{10}/.test(this.orderObj.phone)) {\n          this.errorObj.phoneErr.push('Phone numbers can only contain numbers');\n        }\n\n        if (this.orderObj.phone.length != 11) {\n          this.errorObj.phoneErr.push('Phone numbers must have exactly 11 digits');\n        }\n      }\n\n      if (!this.orderObj.people) {\n        this.errorObj.peopleErr.push(\"Entering number of people is required\");\n      } else {\n        if (parseInt(this.orderObj.people) > 100) {\n          this.errorObj.peopleErr.push(\"Each store can only serve 100 people at a time\");\n        }\n\n        if (parseInt(this.orderObj.people) < 1) {\n          this.errorObj.peopleErr.push(\"Number of people must be greater than or equal to 1\");\n        }\n      }\n\n      if (!this.orderObj.tables) {\n        this.errorObj.tablesErr.push(\"Entering number of tables is required\");\n      } else {\n        if (parseInt(this.orderObj.tables) > 50) {\n          this.errorObj.tablesErr.push(\"Each store can only have maximum 50 tables\");\n        }\n\n        if (parseInt(this.orderObj.tables) < 1) {\n          this.errorObj.tablesErr.push(\"Number of tables must be greater than or equal to 1\");\n        }\n\n        if (parseInt(this.orderObj.people) < parseInt(this.orderObj.tables)) {\n          this.errorObj.tablesErr.push(\"The number of tables must be less than the number of people\");\n        }\n      }\n\n      if (this.orderObj.card) {\n        if (!/[0-9]{10}/.test(this.orderObj.card)) {\n          this.errorObj.cardErr.push('Card numbers can only contain numbers');\n        }\n\n        if (this.orderObj.card.length != 10) {\n          this.errorObj.cardErr.push('Card number must have exactly 10 digits');\n        }\n      }\n\n      if (!this.orderObj.when) {\n        this.errorObj.whenErr.push(\"Entering when to serve is required\");\n      } else {\n        let minRange = document.getElementById(\"oWhen\").getAttribute(\"min\");\n        let maxRange = document.getElementById(\"oWhen\").getAttribute(\"max\");\n        let dateMin = new Date(minRange);\n        let dateMax = new Date(maxRange);\n        let dateInput = new Date(this.orderObj.when);\n\n        if (dateInput === \"Invalid Date\") {\n          this.errorObj.whenErr.push(\"Invalid date input\");\n        }\n\n        if (dateInput.getTime() < dateMin.getTime() || dateInput.getTime() > dateMax.getTime()) {\n          this.errorObj.whenErr.push(\"Available reservation range is from now to next two months\");\n        }\n\n        if (dateInput.getHours() < 7 || dateInput.getHours() > 22) {\n          this.errorObj.whenErr.push(\"Store open from 7:00 AM to 10:00 PM everyday\");\n        }\n      }\n    },\n\n    async handleSubmit(e) {\n      this.checkForm();\n\n      if (!this.checkEmptyErr()) {\n        e.preventDefault();\n      } else {\n        e.preventDefault();\n        let data = {\n          book_name: this.orderObj.name,\n          book_phone: parseInt(this.orderObj.phone),\n          book_people: parseInt(this.orderObj.people),\n          book_tables: parseInt(this.orderObj.tables),\n          user_id: parseInt(this.orderObj.card),\n          book_when: this.orderObj.when,\n          book_note: this.orderObj.note\n        };\n        await axios.post(\"/booking\", data);\n        this.$refs.alert.showAlert('success', 'Thank you! We will call you soon to confirm your order', 'Booking Successfully !');\n        document.getElementById(\"bookTableForm\").reset();\n      }\n    }\n\n  },\n  components: {\n    VueBasicAlert\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","VueBasicAlert","name","data","orderObj","phone","people","tables","card","when","note","errorObj","nameErr","phoneErr","peopleErr","tablesErr","cardErr","whenErr","methods","availableTime","now","Date","day","getDate","slice","currentMonth","getMonth","maxMonth","hour","getHours","min","getMinutes","minRange","getFullYear","maxRange","document","getElementById","setAttribute","resetCheckErr","checkEmptyErr","typeErr","length","checkForm","push","test","replace","startsWith","parseInt","getAttribute","dateMin","dateMax","dateInput","getTime","handleSubmit","e","preventDefault","book_name","book_phone","book_people","book_tables","user_id","book_when","book_note","post","$refs","alert","showAlert","reset","components"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\restaurant-ordering-system-master\\frontend\\src\\pages\\Table.vue"],"sourcesContent":["<template>\n    <vue-basic-alert :duration=\"300\" :closeIn=\"2000\" ref=\"alert\" />\n    <section class=\"order-section\">\n\n        <div class=\"heading\">\n            <span>book a table</span>\n            <h3>enjoy your moment</h3>\n        </div>\n\n        <div class=\"icons-container\">\n\n            <div class=\"icons \">\n                <img src=\"../assets/images/icon-1.png\" alt=\"\">\n                <h3>7:00am to 10:00pm</h3>\n            </div>\n\n            <div class=\"icons\">\n                <img src=\"../assets/images/icon-2.png\" alt=\"\">\n                <h3>+84 123 123 123</h3>\n            </div>\n\n            <div class=\"icons\">\n                <img src=\"../assets/images/icon-3.png\" alt=\"\">\n                <h3>02 Duong Khue, Cau Giay, Ha Noi, Viet Nam</h3>\n            </div>\n\n        </div>\n\n        <!-- booking form -->\n        <form id=\"bookTableForm\" @submit=\"handleSubmit\" novalidate autocomplete=\"off\">\n\n            <div class=\"row\">\n                <div class=\"input-box\">\n                    <label for=\"uName\">your name</label>\n                    <input type=\"text\" name=\"uName\" id=\"uName\" v-model=\"orderObj.name\">\n                    <p v-if=\"errorObj.nameErr.length > 0\">{{ errorObj.nameErr[0] }}</p>\n                </div>\n                <div class=\"input-box\">\n                    <label for=\"uPhone\">your phone number</label>\n                    <input type=\"text\" name=\"uPhone\" id=\"uPhone\" v-model=\"orderObj.phone\">\n                    <p v-if=\"errorObj.phoneErr.length > 0\">{{ errorObj.phoneErr[0] }}</p>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"input-box\">\n                    <label for=\"oPeople\">how many people</label>\n                    <input type=\"number\" name=\"oPeople\" id=\"oPeople\" v-model=\"orderObj.people\">\n                    <p v-if=\"errorObj.peopleErr.length > 0\">{{ errorObj.peopleErr[0] }}</p>\n                </div>\n                <div class=\"input-box\">\n                    <label for=\"oTables\">how many tables</label>\n                    <input type=\"number\" name=\"oTables\" id=\"oTables\" v-model=\"orderObj.tables\">\n                    <p v-if=\"errorObj.tablesErr.length > 0\">{{ errorObj.tablesErr[0] }}</p>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"input-box\">\n                    <label for=\"uCard\">your membership card</label>\n                    <input type=\"text\" name=\"uCard\" id=\"uCard\" v-model=\"orderObj.card\">\n                    <p v-if=\"errorObj.cardErr.length > 0\">{{ errorObj.cardErr[0] }}</p>\n                </div>\n                <div class=\"input-box\">\n                    <label for=\"oWhen\">when</label>\n                    <input type=\"datetime-local\" name=\"oWhen\" id=\"oWhen\" v-model=\"orderObj.when\"\n                        @click=\"availableTime()\">\n                    <p v-if=\"errorObj.whenErr.length > 0\">{{ errorObj.whenErr[0] }}</p>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"input-box\">\n                    <label for=\"uMessage\">note</label>\n                    <textarea placeholder=\"your message, do you want to decorate your table?\" name=\"uMessage\"\n                        id=\"uMessage\" cols=\"30\" rows=\"10\" v-model=\"orderObj.note\"></textarea>\n                </div>\n                <div class=\"input-box\">\n                    <iframe class=\"map\"\n                        src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3723.8938607918262!2d105.77118931493284!3d21.03693248599396!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x313454b6336e0f73%3A0x713103931378d09e!2zMiBExrDGoW5nIEtodcOqLCBNYWkgROG7i2NoLCBD4bqndSBHaeG6pXksIEjDoCBO4buZaQ!5e0!3m2!1svi!2s!4v1637511438358!5m2!1svi!2s\"\n                        loading=\"lazy\"></iframe>\n                </div>\n            </div>\n\n            <input type=\"submit\" value=\"Book Now\" class=\"btn\">\n        </form>\n\n    </section>\n</template>\n\n<script>\nimport axios from 'axios';\nimport VueBasicAlert from 'vue-basic-alert'\nexport default {\n    name: \"Table\",\n\n    data() {\n        return {\n            orderObj: { name: \"\", phone: \"\", people: \"\", tables: \"\", card: \"\", when: \"\", note: \"\" },\n            errorObj: { nameErr: [], phoneErr: [], peopleErr: [], tablesErr: [], cardErr: [], whenErr: [] },\n        }\n    },\n\n    methods: {\n        availableTime: function () {\n            var now = new Date();\n            var day = (\"0\" + now.getDate()).slice(-2);\n            var currentMonth = (\"0\" + (now.getMonth() + 1)).slice(-2);\n            var maxMonth = (\"0\" + (now.getMonth() + 3)).slice(-2);\n            var hour = (\"0\" + (now.getHours())).slice(-2);\n            var min = (\"0\" + (now.getMinutes())).slice(-2);\n            var minRange = now.getFullYear() + \"-\" + currentMonth + \"-\" + day + \"T\" + hour + \":\" + min;\n            var maxRange = now.getFullYear() + \"-\" + maxMonth + \"-\" + day + \"T\" + hour + \":\" + min;\n\n            document.getElementById(\"oWhen\").setAttribute(\"min\", minRange);\n            document.getElementById(\"oWhen\").setAttribute(\"max\", maxRange);\n        },\n\n        resetCheckErr: function () {\n            this.errorObj.nameErr = [];\n            this.errorObj.phoneErr = [];\n            this.errorObj.peopleErr = [];\n            this.errorObj.tablesErr = [];\n            this.errorObj.cardErr = [];\n            this.errorObj.whenErr = [];\n        },\n\n        checkEmptyErr: function () {\n            for (var typeErr in this.errorObj) {\n                if (this.errorObj[typeErr].length != 0) {\n                    return false;\n                }\n            }\n            return true;\n        },\n\n\n\n        checkForm: function () {\n            this.resetCheckErr();\n\n            // Name validate\n            if (!this.orderObj.name) {\n                this.errorObj.nameErr.push(\"Entering a name is required\");\n            }\n            else {\n                if (!/^[A-Za-z]+$/.test(this.orderObj.name.replace(/\\s/g, \"\"))) {\n                    this.errorObj.nameErr.push('A name can only contain letters');\n                }\n            }\n\n            // Phone validate\n            if (!this.orderObj.phone) {\n                this.errorObj.phoneErr.push('Entering phone number is required');\n            }\n            else {\n                if (!this.orderObj.phone.startsWith('84')) {\n                    this.errorObj.phoneErr.push('Phone numbers must start with 84');\n                }\n\n                if (!/[0-9]{10}/.test(this.orderObj.phone)) {\n                    this.errorObj.phoneErr.push('Phone numbers can only contain numbers');\n                }\n\n                if (this.orderObj.phone.length != 11) {\n                    this.errorObj.phoneErr.push('Phone numbers must have exactly 11 digits');\n                }\n            }\n\n            if (!this.orderObj.people) {\n                this.errorObj.peopleErr.push(\"Entering number of people is required\");\n            }\n            else {\n                if (parseInt(this.orderObj.people) > 100) {\n                    this.errorObj.peopleErr.push(\"Each store can only serve 100 people at a time\");\n                }\n\n                if (parseInt(this.orderObj.people) < 1) {\n                    this.errorObj.peopleErr.push(\"Number of people must be greater than or equal to 1\");\n                }\n            }\n\n            if (!this.orderObj.tables) {\n                this.errorObj.tablesErr.push(\"Entering number of tables is required\");\n            }\n            else {\n                if (parseInt(this.orderObj.tables) > 50) {\n                    this.errorObj.tablesErr.push(\"Each store can only have maximum 50 tables\");\n                }\n\n                if (parseInt(this.orderObj.tables) < 1) {\n                    this.errorObj.tablesErr.push(\"Number of tables must be greater than or equal to 1\");\n                }\n\n                if (parseInt(this.orderObj.people) < parseInt(this.orderObj.tables)) {\n                    this.errorObj.tablesErr.push(\"The number of tables must be less than the number of people\");\n                }\n            }\n\n            if (this.orderObj.card) {\n                if (!/[0-9]{10}/.test(this.orderObj.card)) {\n                    this.errorObj.cardErr.push('Card numbers can only contain numbers');\n                }\n\n                if (this.orderObj.card.length != 10) {\n                    this.errorObj.cardErr.push('Card number must have exactly 10 digits');\n                }\n            }\n\n            if (!this.orderObj.when) {\n                this.errorObj.whenErr.push(\"Entering when to serve is required\");\n            }\n            else {\n                let minRange = document.getElementById(\"oWhen\").getAttribute(\"min\");\n                let maxRange = document.getElementById(\"oWhen\").getAttribute(\"max\");\n                let dateMin = new Date(minRange);\n                let dateMax = new Date(maxRange);\n                let dateInput = new Date(this.orderObj.when);\n\n                if (dateInput === \"Invalid Date\") {\n                    this.errorObj.whenErr.push(\"Invalid date input\");\n                }\n\n                if (dateInput.getTime() < dateMin.getTime() || dateInput.getTime() > dateMax.getTime()) {\n                    this.errorObj.whenErr.push(\"Available reservation range is from now to next two months\");\n                }\n\n                if (dateInput.getHours() < 7 || dateInput.getHours() > 22) {\n                    this.errorObj.whenErr.push(\"Store open from 7:00 AM to 10:00 PM everyday\");\n                }\n            }\n\n\n        },\n\n        async handleSubmit(e) {\n            this.checkForm();\n\n            if (!this.checkEmptyErr()) {\n                e.preventDefault();\n            } else {\n                e.preventDefault();\n\n                let data = {\n                    book_name: this.orderObj.name,\n                    book_phone: parseInt(this.orderObj.phone),\n                    book_people: parseInt(this.orderObj.people),\n                    book_tables: parseInt(this.orderObj.tables),\n                    user_id: parseInt(this.orderObj.card),\n                    book_when: this.orderObj.when,\n                    book_note: this.orderObj.note,\n                }\n\n                await axios.post(\"/booking\", data);\n\n                this.$refs.alert.showAlert('success', 'Thank you! We will call you soon to confirm your order', 'Booking Successfully !')\n                document.getElementById(\"bookTableForm\").reset();\n            }\n        }\n    },\n\n    components: {\n        VueBasicAlert\n    }\n\n}\n</script>\n\n<style scoped>\n.order-section {\n    padding: 2rem 9%;\n}\n\n.order-section .icons-container {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(40rem, 1fr));\n    gap: 1.5rem;\n    margin-bottom: 2rem;\n}\n\n.order-section .icons-container .icons {\n    border-radius: .5rem;\n    padding: 2rem;\n    text-align: center;\n    background: #f7f7f7;\n}\n\n.order-section .icons-container .icons img {\n    height: 10rem;\n}\n\n.order-section .icons-container .icons h3 {\n    font-size: 2rem;\n    color: #130f40;\n    margin-top: .5rem;\n}\n\n.order-section form {\n    background: #f7f7f7;\n    padding: 2rem;\n    border-radius: .5rem;\n}\n\n.order-section form .row {\n    justify-content: space-between;\n}\n\n.order-section form .row .input-box {\n    width: 49%;\n    padding: 1.8rem 0;\n}\n\n.order-section form .row label {\n    font-size: 1.7rem;\n    color: #666;\n}\n\n.order-section form .row p {\n    font-size: 1.5rem;\n    position: absolute;\n    color: rgb(243, 47, 47);\n    margin: 0;\n    padding-top: 5px;\n}\n\n.order-section form .row input,\n.order-section form .row textarea {\n    width: 100%;\n    margin-top: .5rem;\n    padding: 1rem 1.2rem;\n    width: 100%;\n    border-radius: .5rem;\n    font-size: 1.6rem;\n    text-transform: none;\n    color: #130f40;\n}\n\n.order-section form .row textarea {\n    height: 20rem;\n    resize: none;\n}\n\n.order-section form .row .map {\n    height: 100%;\n    width: 100%;\n    border-radius: .5rem;\n}\n\n@media (max-width: 768px) {\n    .order form .row .input-box {\n        width: 100%;\n    }\n\n    .order-section form .row {\n        display: block;\n        max-width: 100%;\n        width: 100%;\n        margin: 0;\n    }\n\n    .order-section form .row .input-box {\n        width: 100%;\n    }\n\n}\n\n@media (max-width: 576px) {\n    .order-section .icons-container {\n        grid-template-columns: repeat(auto-fit, minmax(30rem, 1fr));\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}